{"version":3,"sources":["components/Button.tsx","models/CustomGameConfig.ts","pages/manage-templates.tsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","_ref","type","disabled","className","text","onClick","disabledClass","classes","concat","a","createElement","DEFAULT_TEMPLATES","id","name","width","height","bombs","CustomGameConfig","Table","Field","tableName","save","config","Object","assign","uuid","createdAt","Date","Query","cfg","remove","getAll","templates","filter","t","test","length","this","addDefaultTemplateGames","savedDefaultTemplates","item","isDeleted","getById","errors","keys","forEach","key","map","temp","i","COLUMN_NAMES","ManageTemplates","props","_this","_Users_alecdivito_Documents_JS_bomb_finder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_alecdivito_Documents_JS_bomb_finder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_alecdivito_Documents_JS_bomb_finder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","deleteTemplate","_Users_alecdivito_Documents_JS_bomb_finder_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_alecdivito_Documents_JS_bomb_finder_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","template","wrap","_context","prev","next","delete","sent","state","setState","stop","_x","apply","arguments","loading","_this2","react__WEBPACK_IMPORTED_MODULE_7___default","_components_Loading__WEBPACK_IMPORTED_MODULE_9__","dateOptions","month","day","hour","minute","scope","data-column","toLocaleDateString","_components_Button__WEBPACK_IMPORTED_MODULE_10__","Component"],"mappings":"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","file":"static/js/9.f3835469.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Button.css\"\n\ninterface Props {\n    type: \"button\" | \"submit\";\n    className?: string;\n    disabled?: boolean;\n    text: string;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\n/**\n * Taken from:\n * https://codepen.io/finnhvman/pen/zpygBB\n */\nconst Button: React.FC<Props> = ({ type, disabled, className, text, onClick }) => {\n    const disabledClass = (disabled) ? \"button disabled\" : \"button\";\n    const classes = (className) ? `${className} ${disabledClass}` : disabledClass;\n    if (onClick) {\n        return <button className={classes}\n            disabled={disabled}\n            type={type}\n            onClick={onClick}>\n            {text}\n        </button>\n    }\n    return <button className={classes} disabled={disabled} type={type}>{text}</button>\n}\n\nexport default Button;","import { Table, Field, Query, IDBTable } from \"../logic/MetaDataStorage\";\nimport uuid from \"../util/uuid\";\nimport { FormError } from \"./Types\";\n\nexport interface ICustomGameConfig {\n    id?: string;\n    width: number;\n    height: number;\n    bombs: number;\n    name?: string;\n    save?: boolean;\n    createdAt?: Date;\n}\n\nconst EASY_ID = \"00000000-0000-0000-0000-000000000001\";\nconst MEDIUM_ID = \"00000000-0000-0000-0000-000000000002\";\nconst HARD_ID = \"00000000-0000-0000-0000-000000000003\";\n\nconst DEFAULT_TEMPLATES: ICustomGameConfig[] = [\n    {\n        id: EASY_ID,\n        name: \"easy\",\n        width: 8,\n        height: 8,\n        bombs: 10,\n    },\n    {\n        id: MEDIUM_ID,\n        name: \"medium\",\n        width: 16,\n        height: 16,\n        bombs: 40,\n    },\n    {\n        id: HARD_ID,\n        name: \"hard\",\n        width: 24,\n        height: 24,\n        bombs: 99,\n    }\n];\n\n@Table(\"cgc\")\nexport default class CustomGameConfig implements ICustomGameConfig, IDBTable {\n\n    public tableName = \"cgc\";\n\n    @Field(\"cgc\", true)\n    public id: string = \"\";\n\n    @Field(\"cgc\")\n    public name?: string = undefined;\n\n    @Field(\"cgc\")\n    public width: number = 8;\n\n    @Field(\"cgc\")\n    public height: number = 8;\n\n    @Field(\"cgc\")\n    public bombs: number = 10;\n\n    @Field(\"cgc\")\n    public isDeleted: boolean = false;\n\n    @Field(\"cgc\")\n    public createdAt: Date = new Date();\n\n    public save: boolean = false;\n\n    static async save(config: ICustomGameConfig) {\n        const save = Object.assign(new CustomGameConfig(), config,\n            {id: uuid(), createdAt: new Date()});\n        return await Query.save(save);\n    }\n\n    static async delete(config: ICustomGameConfig) {\n        const cfg = Object.assign(new CustomGameConfig(), config);\n        return await Query.remove(cfg);\n    }\n\n    static async getAll(): Promise<ICustomGameConfig[]> {\n        let templates = await Query.getAll(new CustomGameConfig());\n        // check if the default objects exist\n        // if they don't, add them to the store and templates array\n        const defaultTemplates = templates\n            .filter(t => /^[0]{8}-[0]{4}-[0]{4}-[0]{4}-[0]{11}[1-3]$/.test(t.id));\n        if (defaultTemplates.length === 0) { // there is no default templates inside the tempaltes\n            const savedDefaultTemplates = await this.addDefaultTemplateGames();\n            templates = savedDefaultTemplates;\n        }\n        else {\n            // if they do, filter the templates out IF they are deleted\n            templates = templates.filter(item => !item.isDeleted)\n        }\n        return templates;\n    }\n\n    static async getById(id: string) {\n        // TODO: Error handling\n        return await Query.getById(new CustomGameConfig(), id)!;\n    }\n    \n    static validate(config: ICustomGameConfig) {\n        const errors: FormError<ICustomGameConfig> = {};\n        Object.keys(config).forEach((key) => {\n            switch (key) {\n                case 'width':\n                case 'height':\n                    if (config[key] > 50) {\n                        errors[key] = `${key} is too high!`;\n                    } else if (config[key] < 5) {\n                        errors[key] = `${key} is too low!`;\n                    }\n                    break;\n                case 'bombs':\n                    if (config.bombs > (config.width * config.height) - 1) {\n                        errors.bombs = `Too many bombs! (Max: ${(config.width * config.height) - 1})`;\n                    } else if (config.bombs < 1) {\n                        errors.bombs = \"Too few bombs! (Min: 1)\";\n                    }\n                    break;\n                case 'name':\n                    if (config.save && typeof(config.name) === \"string\" ) {\n                        if (config.name.length > 16) {\n                            errors.name = \"Name is too long!\";\n                        } else if (config.name.length === 0) {\n                            errors.name = \"Name cannot be empty!\";\n                        }\n                    }\n            }\n        });\n        return errors;\n    }\n\n    private static async addDefaultTemplateGames() {\n        const templates = DEFAULT_TEMPLATES.map(temp => \n            Object.assign(new CustomGameConfig(), temp));\n        for (let i = 0; i < templates.length; i++) {\n            await Query.save(templates[i]);\n        }\n        return templates;\n    }\n}\n\n","import React, { Component } from \"react\";\nimport CustomGameConfig, { ICustomGameConfig } from '../models/CustomGameConfig';\nimport Loading from \"../components/Loading\";\nimport Button from \"../components/Button\";\nimport \"./manage-templates.css\";\n\ninterface State {\n    loading: boolean;\n    templates: ICustomGameConfig[];\n}\n\nconst COLUMN_NAMES: {name: string, key: keyof ICustomGameConfig }[] = [\n    { name: \"Name\", key: \"name\" },\n    { name: \"Width\", key: \"width\" },\n    { name: \"Height\", key: \"height\" },\n    { name: \"Bombs\", key: \"bombs\" },\n    { name: \"Created At\", key: \"createdAt\" },\n]\n\n/**\n * TODO: Add custom logic to deal with an empty template grid\n * Or just hide it on the main page\n * \n */\nclass ManageTemplates extends Component<{}, State> {\n\n    constructor(props: {}) {\n        super(props);\n        this.state = {\n            loading: true,\n            templates: [],\n        };\n    }\n\n    async componentDidMount() {\n        const templates = await CustomGameConfig.getAll();\n        this.setState({templates, loading: false});\n    }\n\n    deleteTemplate = async (template: ICustomGameConfig) => {\n        const success = await CustomGameConfig.delete(template);\n        if (success) {\n            const templates = this.state.templates.filter(i => i.id! !== template.id!);\n            this.setState({ templates });\n        } else {\n            // TODO: Add error handling\n        }\n    }\n\n    public render() {\n        if (this.state.loading) {\n            return <Loading />\n        }\n\n        const dateOptions = {\n            month: 'long', day: 'numeric',\n            hour: \"2-digit\", minute: \"2-digit\"\n        }\n\n        return <div className=\"manage-templates\">            \n            <table className=\"templates-table\">\n                <caption className=\"templates-table__caption\">Manage Templates</caption>\n                <thead>\n                    <tr className=\"templates-table__row\">\n                    {\n                        COLUMN_NAMES.map(n => <th scope=\"col\" key={n.key}>{n.name}</th>)\n                    }\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.state.templates.map(item =>\n                    <tr key={item.id} className=\"templates-table__row\">\n                    {COLUMN_NAMES.map(n =>\n                        (n.key === \"createdAt\")\n                            ? <td key={`${item.id}-${n.key}`}\n                            data-column={n.name}>\n                                {(item[n.key] as Date).toLocaleDateString(\"default\", dateOptions)}\n                            </td>\n                            : <td key={`${item.id}-${n.key}`}\n                            data-column={n.name}>\n                                {item[n.key]}\n                            </td>\n                    )}\n                        <td>\n                            <Button type=\"button\" text=\"Delete\" onClick={() => this.deleteTemplate(item)} />\n                        </td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        </div>\n    }\n    \n}\n\nexport default ManageTemplates;"],"sourceRoot":""}