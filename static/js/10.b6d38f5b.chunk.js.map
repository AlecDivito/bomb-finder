{"version":3,"sources":["components/Dropdown.tsx","pages/stats.tsx","util/toHHMMSS.ts","../node_modules/react-minimal-pie-chart/dist/index.js"],"names":["Dropdown","props","react_default","a","createElement","className","onChange","items","map","item","i","key","value","Stats","state","loading","stats","index","changeStatistics","e","_this","findIndex","s","name","currentTarget","setState","Statistics","GetAllStatistics","this","Loading","length","_this$state","stat","src_components_Dropdown","gamesPlayed","dist_default","animate","labelStyle","width","fontSize","fontFamily","fill","data","wins","color","getColor","losses","inprogress","style","backgroundColor","averageMoves","toHHMMSS","bestTime","worstTime","averageTime","totalTimePlayed","segments","concat","Component","time","Math","floor","hours","minutes","seconds","timeString","__webpack_require__","d","__webpack_exports__","exports","React","PropTypes","React__default","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","svgPartialCircle","cx","cy","r","start","end","fromX","cos","fromY","sin","toX","toY","large","abs","PI","sweep","degreesToRadians","degrees","evaluateLabelTextAnchor","_temp","_ref","labelPosition","lineWidth","labelHorizontalShift","innerRadius","valueBetween","min","max","extractPercentage","percentage","ReactMinimalPieChartPath","strokeDasharray","strokeDashoffset","startAngle","lengthAngle","radius","reveal","title","actualRadio","pathCommands","patchedLengthAngle","command","join","makePathCommands","strokeWidth","displayName","propTypes","number","isRequired","oneOfType","string","defaultProps","stylePropType","objectOf","dataPropType","arrayOf","shape","ReactMinimalPieChartLabel","dataIndex","textAnchor","alignmentBaseline","renderLabels","dataEntry","startOffset","halfAngle","halfAngleRadians","dx","dy","labelProps","x","y","option","isValidElement","cloneElement","label","renderLabelItem","renderSegments","hide","duration","easing","furtherStyles","segmentsStyle","transitionStyle","animationDuration","animationEasing","transition","filter","Boolean","paths","stroke","strokeLinecap","rounded","undefined","onMouseOver","onMouseOut","onClick","background","unshift","ReactMinimalPieChart","_Component","subClass","superClass","hideSegments","create","constructor","__proto__","_proto","componentDidMount","_this2","requestAnimationFrame","initialAnimationTimerId","setTimeout","initialAnimationRAFId","startAnimation","componentWillUnmount","clearTimeout","cancelAnimationFrame","forceUpdate","render","ratio","baseSize","extendedData","totalAngle","totalValue","paddingAngle","total","reduce","acc","sumValues","normalizedTotalAngle","numberOfPaddings","degreesTakenByPadding","sign","singlePaddingDegrees","degreesTakenByPaths","lastSegmentEnd","valueInPercentage","extendData","viewBox","height","display","injectSvg","children","bool","node","func","element","VIEWBOX_SIZE","default","defineProperty","factory"],"mappings":"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","file":"static/js/10.b6d38f5b.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Dropdown.css\"\n\ninterface Props {\n    items: string[];\n    value: string;\n    onChange: (event: React.FormEvent<HTMLSelectElement>) => void;\n}\n\nconst Dropdown: React.FC<Props> = (props: Props) => {\n    return <div className=\"select\">\n        <select className=\"select__input\" onChange={props.onChange} >\n            {props.items.map((item, i) =>\n                <option key={i} value={item}>{item}</option>\n            )})\n        </select>\n    </div>\n}\n\nexport default Dropdown;","import React, { Component } from \"react\";\nimport PieChart from 'react-minimal-pie-chart';\nimport Loading from \"../components/Loading\";\nimport Statistics from \"../models/Statistics\";\nimport \"./stats.css\";\nimport Dropdown from \"../components/Dropdown\";\nimport toHHMMSS from \"../util/toHHMMSS\";\n\ninterface State {\n    loading: boolean;\n    stats: Statistics[];\n    index: number;\n}\n\n// TODO: Add pretty graphs :)\nexport default class Stats extends Component<{}, State> {\n\n    state: Readonly<State> = {\n        loading: true,\n        stats: [],\n        index: 0,\n    };\n\n    async componentDidMount() {\n        let stats = await Statistics.GetAllStatistics();\n        this.setState({stats, loading: false});\n    }\n\n    changeStatistics = (e: React.FormEvent<HTMLSelectElement>) => {\n        const index = this.state.stats\n            .findIndex(s => s.name === e.currentTarget.value);\n        this.setState({ index });\n    }\n\n    public render() {\n        if (this.state.loading) {\n            return <Loading />\n        }\n        if (this.state.stats && this.state.stats!.length === 0) {\n            return <div className=\"stats\">\n                <h1>Statistics!</h1>\n                <p>\n                    No Games Found! Play some games and come back too see how\n                    good you are!\n                </p>\n            </div>\n        }\n        const { index, stats } = this.state\n        const stat = stats![index];\n        return (\n            <div className=\"stats\">\n                <h1 className=\"stats__header\">Stats!</h1>\n                <Dropdown\n                    value={stats[index].name}\n                    items={stats.map(s => s.name)}\n                    onChange={this.changeStatistics}/>\n                <div className=\"stats__caption center\">\n                    <strong>{stat.gamesPlayed}</strong> Games Played\n                </div>\n                <div className=\"stats__chart\">\n                    <PieChart\n                        animate={true}\n                        labelStyle={{\n                            width: '200px',\n                            fontSize: '5px',\n                            fontFamily: 'sans-serif',\n                            fill: '#121212'\n                        }}\n                        data={[\n                            { value: stat.wins, color: this.getColor(0, 3) },\n                            { value: stat.losses, color: this.getColor(1, 3) },\n                            { value: stat.inprogress, color: this.getColor(2, 3) },\n                        ]}/>\n                    <ul className=\"stats__chart__list\">\n                        <li style={{backgroundColor: this.getColor(0, 3)}}>\n                            Wins ({stat.wins})\n                        </li>\n                        <li style={{backgroundColor: this.getColor(1, 3)}}>\n                            Losses ({stat.losses})\n                        </li>\n                        <li style={{backgroundColor: this.getColor(2, 3)}}>\n                            In Progress ({stat.inprogress})\n                        </li>\n                    </ul>\n                </div>\n                <table className=\"stats__table\">\n                    <tbody>\n                        <tr>\n                            <td>Average Moves</td>\n                            <td>{stat.averageMoves}</td>\n                        </tr>\n                        <tr>\n                            <td>Best Times</td>\n                            <td>{toHHMMSS(stat.bestTime)}</td>\n                        </tr>\n                        <tr>\n                            <td>Worst Time</td>\n                            <td>{toHHMMSS(stat.worstTime)}</td>\n                        </tr>\n                        <tr>\n                            <td>Average Times</td>\n                            <td>{toHHMMSS(stat.averageTime)}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Time Played</td>\n                            <td>{toHHMMSS(stat.totalTimePlayed)}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n    private getColor(index: number, segments: number): string {\n        const segment = (360 - 200) / segments;\n        const color = (index * segment) + 200;\n        return `hsl(${color}, 100%, 50%)`;\n    }\n}\n","export default function toHHMMSS(time: number) {\n    time = Math.floor(time);\n    const hours = Math.floor(time / 3600);\n    const minutes = Math.floor((time - (hours * 3600)) / 60);\n    const seconds = time - (hours * 3600) - (minutes * 60);\n    let timeString = \"\";\n\n    if (hours > 0) {\n        timeString += (hours < 10) ? `0${hours}:` : `${hours}:`;\n    }\n    timeString += (minutes < 10) ? `0${minutes}:` : `${minutes}:`;\n    timeString += (seconds < 10) ? `0${seconds}` : `${seconds}`;\n\n    return timeString;\n}","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('prop-types')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'prop-types'], factory) : (global = global || self, factory(global.ReactMinimalPieChart = {}, global.React, global.PropTypes));\n})(this, function (exports, React, PropTypes) {\n  'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  var partialCircle = function partialCircle(cx, cy, r, start, end) {\n    var length = end - start;\n    if (length === 0) return [];\n    var fromX = r * Math.cos(start) + cx;\n    var fromY = r * Math.sin(start) + cy;\n    var toX = r * Math.cos(end) + cx;\n    var toY = r * Math.sin(end) + cy;\n    var large = Math.abs(length) <= Math.PI ? '0' : '1';\n    var sweep = length < 0 ? '0' : '1';\n    return [['M', fromX, fromY], ['A', r, r, 0, large, sweep, toX, toY]];\n  };\n\n  var svgPartialCircle = partialCircle;\n  var PI = Math.PI;\n\n  function degreesToRadians(degrees) {\n    return degrees * PI / 180;\n  }\n\n  function evaluateViewBoxSize(ratio, baseSize) {\n    // Wide ratio\n    if (ratio > 1) {\n      return \"0 0 \" + baseSize + \" \" + baseSize / ratio;\n    } // Narrow/squared ratio\n\n\n    return \"0 0 \" + baseSize * ratio + \" \" + baseSize;\n  }\n\n  function evaluateLabelTextAnchor(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        labelPosition = _ref.labelPosition,\n        lineWidth = _ref.lineWidth,\n        labelHorizontalShift = _ref.labelHorizontalShift; // Label in the vertical center\n\n\n    if (labelHorizontalShift === 0) {\n      return 'middle';\n    } // Outward label\n\n\n    if (labelPosition > 100) {\n      return labelHorizontalShift > 0 ? 'start' : 'end';\n    } // Inward label\n\n\n    var innerRadius = 100 - lineWidth;\n\n    if (labelPosition < innerRadius) {\n      return labelHorizontalShift > 0 ? 'end' : 'start';\n    } // Overlying label\n\n\n    return 'middle';\n  }\n\n  function valueBetween(value, min, max) {\n    if (value > max) return max;\n    if (value < min) return min;\n    return value;\n  }\n\n  function extractPercentage(value, percentage) {\n    return value * percentage / 100;\n  }\n\n  function makePathCommands(cx, cy, startAngle, lengthAngle, radius) {\n    var patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n    return svgPartialCircle(cx, cy, // center X and Y\n    radius, degreesToRadians(startAngle), degreesToRadians(startAngle + patchedLengthAngle)).map(function (command) {\n      return command.join(' ');\n    }).join(' ');\n  }\n\n  function ReactMinimalPieChartPath(_ref) {\n    var cx = _ref.cx,\n        cy = _ref.cy,\n        startAngle = _ref.startAngle,\n        lengthAngle = _ref.lengthAngle,\n        radius = _ref.radius,\n        lineWidth = _ref.lineWidth,\n        reveal = _ref.reveal,\n        title = _ref.title,\n        props = _objectWithoutPropertiesLoose(_ref, [\"cx\", \"cy\", \"startAngle\", \"lengthAngle\", \"radius\", \"lineWidth\", \"reveal\", \"title\"]);\n\n    var actualRadio = radius - lineWidth / 2;\n    var pathCommands = makePathCommands(cx, cy, startAngle, lengthAngle, actualRadio);\n    var strokeDasharray;\n    var strokeDashoffset; // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n    // https://css-tricks.com/svg-line-animation-works/\n\n    if (typeof reveal === 'number') {\n      strokeDasharray = degreesToRadians(actualRadio) * Math.abs(lengthAngle);\n      strokeDashoffset = strokeDasharray + extractPercentage(strokeDasharray, reveal);\n    }\n\n    return React__default.createElement(\"path\", _extends({\n      d: pathCommands,\n      strokeWidth: lineWidth,\n      strokeDasharray: strokeDasharray,\n      strokeDashoffset: strokeDashoffset\n    }, props), title && React__default.createElement(\"title\", null, title));\n  }\n\n  ReactMinimalPieChartPath.displayName = 'ReactMinimalPieChartPath';\n  ReactMinimalPieChartPath.propTypes = {\n    cx: PropTypes.number.isRequired,\n    cy: PropTypes.number.isRequired,\n    startAngle: PropTypes.number,\n    lengthAngle: PropTypes.number,\n    radius: PropTypes.number,\n    lineWidth: PropTypes.number,\n    reveal: PropTypes.number,\n    title: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  };\n  ReactMinimalPieChartPath.defaultProps = {\n    startAngle: 0,\n    lengthAngle: 0,\n    lineWidth: 100,\n    radius: 100\n  };\n  var stylePropType = PropTypes.objectOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]));\n  var dataPropType = PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    value: PropTypes.number.isRequired,\n    color: PropTypes.string,\n    key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    style: stylePropType\n  }));\n\n  function ReactMinimalPieChartLabel(_ref) {\n    var data = _ref.data,\n        dataIndex = _ref.dataIndex,\n        color = _ref.color,\n        props = _objectWithoutPropertiesLoose(_ref, [\"data\", \"dataIndex\", \"color\"]);\n\n    return React__default.createElement(\"text\", _extends({\n      textAnchor: \"middle\",\n      alignmentBaseline: \"middle\",\n      fill: color\n    }, props));\n  }\n\n  ReactMinimalPieChartLabel.displayName = 'ReactMinimalPieChartLabel';\n  ReactMinimalPieChartLabel.propTypes = {\n    data: dataPropType,\n    dataIndex: PropTypes.number,\n    color: PropTypes.string\n  };\n  var VIEWBOX_SIZE = 100;\n  var VIEWBOX_HALF_SIZE = VIEWBOX_SIZE / 2;\n\n  function sumValues(data) {\n    return data.reduce(function (acc, dataEntry) {\n      return acc + dataEntry.value;\n    }, 0);\n  } // Append \"percentage\", \"degrees\" and \"startOffset\" into each data entry\n\n\n  function extendData(_ref) {\n    var data = _ref.data,\n        totalAngle = _ref.lengthAngle,\n        totalValue = _ref.totalValue,\n        paddingAngle = _ref.paddingAngle;\n    var total = totalValue || sumValues(data);\n    var normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n    var numberOfPaddings = Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n    var degreesTakenByPadding = Math.abs(paddingAngle) * numberOfPaddings * Math.sign(normalizedTotalAngle);\n    var singlePaddingDegrees = degreesTakenByPadding / numberOfPaddings;\n    var degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n    var lastSegmentEnd = 0;\n    return data.map(function (dataEntry) {\n      var valueInPercentage = dataEntry.value / total * 100;\n      var degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n      var startOffset = lastSegmentEnd;\n      lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n      return _extends({\n        percentage: valueInPercentage,\n        degrees: degrees,\n        startOffset: startOffset\n      }, dataEntry);\n    });\n  }\n\n  function makeSegmentTransitionStyle(duration, easing, furtherStyles) {\n    if (furtherStyles === void 0) {\n      furtherStyles = {};\n    } // Merge CSS transition necessary for chart animation with the ones provided by \"segmentsStyle\"\n\n\n    var transition = [\"stroke-dashoffset \" + duration + \"ms \" + easing, furtherStyles.transition].filter(Boolean).join(',');\n    return {\n      transition: transition\n    };\n  }\n\n  function renderLabelItem(option, props, value) {\n    if (React__default.isValidElement(option)) {\n      return React__default.cloneElement(option, props);\n    }\n\n    var label = value;\n\n    if (typeof option === 'function') {\n      label = option(props);\n\n      if (React__default.isValidElement(label)) {\n        return label;\n      }\n    }\n\n    return React__default.createElement(ReactMinimalPieChartLabel, props, label);\n  }\n\n  function renderLabels(data, props) {\n    var labelPosition = extractPercentage(props.radius, props.labelPosition);\n    return data.map(function (dataEntry, index) {\n      var startAngle = props.startAngle + dataEntry.startOffset;\n      var halfAngle = startAngle + dataEntry.degrees / 2;\n      var halfAngleRadians = degreesToRadians(halfAngle);\n      var dx = Math.cos(halfAngleRadians) * labelPosition;\n      var dy = Math.sin(halfAngleRadians) * labelPosition; // This object is passed as props to the \"label\" component\n\n      var labelProps = {\n        key: \"label-\" + (dataEntry.key || index),\n        x: props.cx,\n        y: props.cy,\n        dx: dx,\n        dy: dy,\n        textAnchor: evaluateLabelTextAnchor({\n          lineWidth: props.lineWidth,\n          labelPosition: props.labelPosition,\n          labelHorizontalShift: dx\n        }),\n        data: data,\n        dataIndex: index,\n        color: dataEntry.color,\n        style: props.labelStyle\n      };\n      return renderLabelItem(props.label, labelProps, dataEntry.value);\n    });\n  }\n\n  function renderSegments(data, props, hide) {\n    var style = props.segmentsStyle;\n    var reveal;\n\n    if (props.animate) {\n      var transitionStyle = makeSegmentTransitionStyle(props.animationDuration, props.animationEasing, style);\n      style = Object.assign({}, style, transitionStyle);\n    } // Hide/reveal the segment?\n\n\n    if (hide === true) {\n      reveal = 0;\n    } else if (typeof props.reveal === 'number') {\n      reveal = props.reveal;\n    } else if (hide === false) {\n      reveal = 100;\n    }\n\n    var paths = data.map(function (dataEntry, index) {\n      var startAngle = props.startAngle + dataEntry.startOffset;\n      return React__default.createElement(ReactMinimalPieChartPath, {\n        key: dataEntry.key || index,\n        cx: props.cx,\n        cy: props.cy,\n        startAngle: startAngle,\n        lengthAngle: dataEntry.degrees,\n        radius: props.radius,\n        lineWidth: extractPercentage(props.radius, props.lineWidth),\n        reveal: reveal,\n        title: dataEntry.title,\n        style: Object.assign({}, style, dataEntry.style),\n        stroke: dataEntry.color,\n        strokeLinecap: props.rounded ? 'round' : undefined,\n        fill: \"none\",\n        onMouseOver: props.onMouseOver && function (e) {\n          return props.onMouseOver(e, props.data, index);\n        },\n        onMouseOut: props.onMouseOut && function (e) {\n          return props.onMouseOut(e, props.data, index);\n        },\n        onClick: props.onClick && function (e) {\n          return props.onClick(e, props.data, index);\n        }\n      });\n    });\n\n    if (props.background) {\n      paths.unshift(React__default.createElement(ReactMinimalPieChartPath, {\n        key: \"bg\",\n        cx: props.cx,\n        cy: props.cy,\n        startAngle: props.startAngle,\n        lengthAngle: props.lengthAngle,\n        radius: props.radius,\n        lineWidth: extractPercentage(props.radius, props.lineWidth),\n        stroke: props.background,\n        strokeLinecap: props.rounded ? 'round' : undefined,\n        fill: \"none\"\n      }));\n    }\n\n    return paths;\n  }\n\n  var ReactMinimalPieChart =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(ReactMinimalPieChart, _Component);\n\n    function ReactMinimalPieChart(props) {\n      var _this;\n\n      _this = _Component.call(this, props) || this;\n\n      if (_this.props.animate === true) {\n        _this.hideSegments = true;\n      }\n\n      return _this;\n    }\n\n    var _proto = ReactMinimalPieChart.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.animate === true && requestAnimationFrame) {\n        this.initialAnimationTimerId = setTimeout(function () {\n          _this2.initialAnimationTimerId = null;\n          _this2.initialAnimationRAFId = requestAnimationFrame(function () {\n            _this2.initialAnimationRAFId = null;\n\n            _this2.startAnimation();\n          });\n        });\n      }\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this.initialAnimationTimerId) {\n        clearTimeout(this.initialAnimationTimerId);\n      }\n\n      if (this.initialAnimationRAFId) {\n        cancelAnimationFrame(this.initialAnimationRAFId);\n      }\n    };\n\n    _proto.startAnimation = function startAnimation() {\n      this.hideSegments = false;\n      this.forceUpdate();\n    };\n\n    _proto.render = function render() {\n      if (this.props.data === undefined) {\n        return null;\n      }\n\n      var extendedData = extendData(this.props);\n      return React__default.createElement(\"div\", {\n        className: this.props.className,\n        style: this.props.style\n      }, React__default.createElement(\"svg\", {\n        viewBox: evaluateViewBoxSize(this.props.ratio, VIEWBOX_SIZE),\n        width: \"100%\",\n        height: \"100%\",\n        style: {\n          display: 'block'\n        }\n      }, renderSegments(extendedData, this.props, this.hideSegments), this.props.label && renderLabels(extendedData, this.props), this.props.injectSvg && this.props.injectSvg()), this.props.children);\n    };\n\n    return ReactMinimalPieChart;\n  }(React.Component);\n\n  ReactMinimalPieChart.displayName = 'ReactMinimalPieChart';\n  ReactMinimalPieChart.propTypes = {\n    data: dataPropType,\n    cx: PropTypes.number,\n    cy: PropTypes.number,\n    ratio: PropTypes.number,\n    totalValue: PropTypes.number,\n    className: PropTypes.string,\n    style: stylePropType,\n    segmentsStyle: stylePropType,\n    background: PropTypes.string,\n    startAngle: PropTypes.number,\n    lengthAngle: PropTypes.number,\n    paddingAngle: PropTypes.number,\n    lineWidth: PropTypes.number,\n    radius: PropTypes.number,\n    rounded: PropTypes.bool,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    animationEasing: PropTypes.string,\n    reveal: PropTypes.number,\n    children: PropTypes.node,\n    injectSvg: PropTypes.func,\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.element, PropTypes.bool]),\n    labelPosition: PropTypes.number,\n    labelStyle: stylePropType,\n    onMouseOver: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    onClick: PropTypes.func\n  };\n  ReactMinimalPieChart.defaultProps = {\n    cx: VIEWBOX_HALF_SIZE,\n    cy: VIEWBOX_HALF_SIZE,\n    ratio: 1,\n    startAngle: 0,\n    lengthAngle: 360,\n    paddingAngle: 0,\n    lineWidth: 100,\n    radius: VIEWBOX_HALF_SIZE,\n    rounded: false,\n    animate: false,\n    animationDuration: 500,\n    animationEasing: 'ease-out',\n    label: false,\n    labelPosition: 50,\n    onMouseOver: undefined,\n    onMouseOut: undefined,\n    onClick: undefined\n  };\n  exports.default = ReactMinimalPieChart;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}